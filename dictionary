! drop
" cons?  "
# length
$ label/var
% mod
& and
' cat  '
* mul
+ add
, swap
- sub
. dup
/ divide
: over
; rot
< less
= eq
> great
? equals
@ swap nth
\ r@
^ call/comb
_ in_ident, neg _123, _ line comment
` show/lit
{ >r
| or
} r>
~ not?

A append file
B break array
C copy file
D dir file
E extend array
F folder file
G greater number
H head array
I iota array
J join array
K kernel array
L lesser number
M move file
N nudge array
O open file
P power number
Q query array
R reverse array
S sort array
T tail array
U unlink file
V vector array
W write file
X exclude array
Y yank array
Z round number?


a( and
b( both
c( cells // case? cond?
d( dip
e( each
f( fold
g( group (stencil?)
h( heads (scan)
i( if
j( (ifelse?)
k( keep
l( let?
m( map
n( if no
o( or
p( product outer / fixed point
q( query
r( reduce
s( shaped (rank)
t( times
u( until
v( vector
w( while
x( exclude (filter)
y( if yes
z( zip

a[ regex all matches
b[ regex split
c[ char
d[ digits (generalized bytestring)
e[ escaped
f[ find file
g[ grep
h[ shell
i[ 
j[ json
k[ numbers (similar to âŽ•VFI)
l[ lines
m[ regex fullmatch
n[ pathname literal
o[ 
p[ printf
q[ regex query
r[ regex replace
s[ regex search
t[ trim whitespace
u[
v[ env var?
w[ words (symbols?)
x[ execute file at?
y[
z[ format
_[ comment
$[ symbols

